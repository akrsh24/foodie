{"version":3,"sources":["components/search/SearchBar.jsx","components/content/category/DineCategory.jsx","components/content/ContentComponent.jsx","components/home/Home.jsx","routes/Routes.jsx","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","useState","coordinates","setCoordinates","showError","error","console","log","code","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","UNKNOWN_ERROR","className","addonBefore","AimOutlined","onClick","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","addonAfter","SearchOutlined","size","DineCategory","ContentComponent","Home","Routes","exact","path","component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRA4DeA,G,MAvDG,WAAO,IAAD,EAEkBC,mBAAS,IAF3B,mBAEbC,EAFa,KAEAC,EAFA,KAYdC,EAAY,SAACC,GAEf,OADAC,QAAQC,IAAIF,GACJA,EAAMG,MACV,KAAKH,EAAMI,kBACP,MAAO,2CACX,KAAKJ,EAAMK,qBACP,MAAO,uCACX,KAAKL,EAAMM,QACP,MAAO,8CACX,KAAKN,EAAMO,cAEX,QAAS,MAAO,+BAMxB,OAFAN,QAAQC,IAAI,cAAeL,GAGvB,qBAAKW,UAAU,kBAAf,SACI,sBAAKA,UAAU,sBAAf,UACI,qBAAKA,UAAU,mBACf,sBAAKA,UAAU,sBAAf,UACI,sBAAKA,UAAU,aAAf,UACI,wCACA,4CAEJ,sBAAKA,UAAU,2BAAf,UACI,qBAAKA,UAAU,OAAf,oBACA,qBAAKA,UAAU,cAAf,6CACA,qBAAKA,UAAU,aAAf,SACI,cAAC,IAAD,CACIC,YAAa,cAACC,EAAA,EAAD,CAAaC,QAvClC,WACZC,UAAUC,aACVD,UAAUC,YAAYC,oBAAmB,SAACC,GAAc,IAAD,EACnBA,EAASC,OAAjCC,EAD2C,EAC3CA,SAAUC,EADiC,EACjCA,UAClBpB,EAAe,CAAEmB,WAAUC,gBAC5BnB,MAmCiBoB,WAAY,cAACC,EAAA,EAAD,IACZC,KAAK,yBCvCtBC,G,OARM,WACjB,OACI,qBAAKd,UAAU,0BAAf,SACI,4CCMGe,G,OARU,WACrB,OACI,qBAAKf,UAAU,oBAAf,SACI,cAAC,EAAD,QCMGgB,EATF,WACT,OACI,qCACI,cAAC,EAAD,IACA,cAAC,EAAD,QCIGC,EARA,WACX,OACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,WAAWC,UAAWJ,O,OCQrCK,MAVf,WACE,OACE,cAAC,IAAD,UACE,qBAAKrB,UAAU,gBAAf,SACE,cAAC,EAAD,SCGOsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.0c4f760e.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { AimOutlined, SearchOutlined } from '@ant-design/icons';\nimport { Input } from 'antd';\nimport \"./SearchBar.scss\";\n\nconst SearchBar = () => {\n\n    const [coordinates, setCoordinates] = useState({});\n\n    const getLocation = () => {\n        if (navigator.geolocation)\n            navigator.geolocation.getCurrentPosition((position) => {\n                const { latitude, longitude } = position.coords;\n                setCoordinates({ latitude, longitude });\n            }, showError);\n    }\n\n    const showError = (error) => {\n        console.log(error);\n        switch (error.code) {\n            case error.PERMISSION_DENIED:\n                return \"User denied the request for Geolocation.\";\n            case error.POSITION_UNAVAILABLE:\n                return \"Location information is unavailable.\";\n            case error.TIMEOUT:\n                return \"The request to get user location timed out.\";\n            case error.UNKNOWN_ERROR:\n                return \"An unknown error occurred.\";\n            default: return \"An unknown error occurred.\";\n        }\n    }\n\n    console.log(\"Coordinates\", coordinates);\n\n    return (\n        <div className=\"search-menu-div\">\n            <div className=\"search-menu-overlay\">\n                <div className=\"search-menu-bg\" />\n                <div className=\"search-menu-content\">\n                    <div className=\"login-span\">\n                        <div>Login</div>\n                        <div>Signup</div>\n                    </div>\n                    <div className=\"app-logo-description-div\">\n                        <div className=\"logo\">Foodie</div>\n                        <div className=\"description\">Discover the best food & drinks</div>\n                        <div className=\"search-bar\">\n                            <Input\n                                addonBefore={<AimOutlined onClick={getLocation} />}\n                                addonAfter={<SearchOutlined />}\n                                size=\"large\"\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default SearchBar;","import React from 'react';\nimport \"./DineCategory.scss\";\n\nconst DineCategory = () => {\n    return (\n        <div className=\"dine-category-container\">\n            <h1>Hellos</h1>\n        </div>\n    );\n}\n\nexport default DineCategory;","import React from 'react';\nimport DineCategory from './category/DineCategory';\nimport \"./ContentComponent.scss\";\n\nconst ContentComponent = () => {\n    return (\n        <div className=\"content-container\">\n            <DineCategory />\n        </div>\n    );\n}\n\nexport default ContentComponent;","import React from 'react';\nimport SearchBar from '../search/SearchBar';\nimport ContentComponent from '../content/ContentComponent';\n\nconst Home = () => {\n    return (\n        <>\n            <SearchBar />\n            <ContentComponent />\n        </>\n    );\n}\n\nexport default Home;","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Home from '../components/home/Home';\n\nconst Routes = () => {\n    return (\n        <Switch>\n            <Route exact path=\"/foodie/\" component={Home} />\n        </Switch>\n    );\n}\n\nexport default Routes;","import React from 'react';\nimport { BrowserRouter } from \"react-router-dom\";\nimport Routes from \"./routes/Routes\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"app-container\" >\n        <Routes />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}